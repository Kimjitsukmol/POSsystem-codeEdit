let cart = [];
let lastAddedProduct = null;

const payButton = document.querySelector(".pay");
const paymentPopup = document.getElementById("paymant");

const paymantUnitValue = document.getElementById("paymant-unit-value");
const paymantPriceValue = document.getElementById("paymant-price-value");

const cashInput = document.getElementById("cashInput");
const changeValue = document.getElementById("change-value");

const input = document.getElementById("productInput");
const addbox = document.getElementById("addProduct_box");

const unitDisplay = document.querySelector(".unit div:nth-child(2)");
const priceDisplay = document.querySelector(".price div:nth-child(2)");

//-------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö icon -----------------------
const products = [
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏™‡∏¥‡∏á‡∏´‡πå", price: 50, img: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏™‡∏¥‡∏á‡∏´‡πå.png" },
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏¥‡∏û‡∏¢‡πå", price: 48, img: "‡∏ô‡πâ‡∏≥‡∏ó‡∏¥‡∏û‡∏¢‡πå.png" },
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡πÄ‡∏•‡∏¥‡∏ü", price: 29, img: "‡∏ô‡πâ‡∏≥‡πÄ‡∏•‡∏¥‡∏ü.png" },
    { name: "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", price: 10, img: "‡∏ô‡πâ‡∏≥‡πÄ‡πÄ‡∏Ç‡πá‡∏á.png" },
    { name: "‡∏ô‡πâ‡∏≥‡∏ñ‡∏±‡∏á‡∏ü‡πâ‡∏≤", price: 25, img: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ñ‡∏±‡∏á‡∏ü‡πâ‡∏≤.png" },
    { name: "‡∏ñ‡πà‡∏≤‡∏ô‡∏ñ‡∏±‡∏á‡∏Ç‡∏≤‡∏ß", price: 15, img: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ñ‡∏±‡∏á‡∏Ç‡∏≤‡∏ß.png" },
    { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤", price: 9, img: "‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤.png" },
    { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°", price: 8, img: "‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°.png" },
    { name: "‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà", price: 5, img: "‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà.png" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏ñ‡∏±‡∏á‡πÉ‡∏´‡∏ç‡πà 15 ‡πÇ‡∏•", price: 460, img: "‡πÅ‡∏Å‡πä‡∏™ 15 ‡πÇ‡∏•.png" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏ñ‡∏±‡∏á 9.5 ‡πÇ‡∏•", price: 310, img: "‡πÅ‡∏Å‡πä‡∏™ 10 ‡πÇ‡∏•.png" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏õ‡∏¥‡πä‡∏Å‡∏ô‡∏¥‡∏Ñ", price: 180, img: "‡πÅ‡∏Å‡πä‡∏™‡∏õ‡∏¥‡πä‡∏Å‡∏ô‡∏¥‡∏Ñ.png" },
    { name: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î", price: 50, img: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î.png" },
    { name: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î‡∏ó‡∏≤‡∏á‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß", price: 40, img: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î‡∏ó‡∏≤‡∏á‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß.png" },
    { name: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô 91,95", price: 40, img: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô 91,95.png" },
    { name: "‡πÄ‡∏ï‡∏≤‡∏ñ‡πà‡∏≤‡∏ô", price: 130, img: "‡πÄ‡∏ï‡∏≤‡∏ñ‡πà‡∏≤‡∏ô.png" },
    { name: "‡∏ñ‡πà‡∏≤‡∏ô‡∏´‡∏∏‡∏á‡∏ï‡πâ‡∏°", price: 20, img: "‡∏ñ‡πà‡∏≤‡∏ô‡∏´‡∏∏‡∏á‡∏ï‡πâ‡∏°.png" },
    { name: "‡∏´‡∏≠‡∏° ‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°", price: 20, img: "‡∏´‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°.png" }
];

function renderProducts() {
    const container = document.querySelector(".noncode-product");
    // container.innerHTML = ''; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô

    products.forEach(product => {
        const productDiv = document.createElement("div");
        productDiv.className = "manu-product";
        productDiv.setAttribute("data-name", product.name);
        productDiv.setAttribute("data-price", product.price);

        productDiv.innerHTML = `
            <div><img src="${product.img}" alt=""></div>
            <div>‡∏ø${product.price.toFixed(2)}</div>
        `;

        container.appendChild(productDiv);
    });
}

document.addEventListener("DOMContentLoaded", function() {
    renderProducts();
});



// -------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î---------------------------------------------------------------------
function speak(text) {
    const utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = 'th-TH';
    speechSynthesis.speak(utterance);
}

// -------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î---------------------------------------------------------------------

//------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤-------------------------------------------------------------------
function debounce(func, delay) {
    let timeout;
    return function (...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), delay);
    };
}

//------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤-------------------------------------------------------------------

//-------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤------------------------------------------------------
function updateClock() {
    const now = new Date();

    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    const seconds = String(now.getSeconds()).padStart(2, '0');

    const timeString = `${hours}:${minutes}:${seconds}`;

    document.getElementById('time').textContent = timeString;
}

setInterval(updateClock, 1000);
updateClock();
//-------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤------------------------------------------------------

//--------------‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏õ focus ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤--------------------------------------
window.addEventListener("DOMContentLoaded", function () {
    input.focus();
});

// ‚úÖ Focus ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
function checkAndFocusInput() {
  const isPayPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";
  const isNewProdPopupOpen = window.getComputedStyle(newProductPopup).display !== "none";
  const ae = document.activeElement;

  if (isPayPopupOpen) {
    // ‡πÇ‡∏´‡∏°‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‚Üí ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏°‡πÇ‡∏ü‡∏Å‡∏±‡∏™
    if (ae !== cashInput) cashInput.focus();
    return;
  }

  if (isNewProdPopupOpen) {
    // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏≠‡∏¢‡∏π‡πà "‡∏†‡∏≤‡∏¢‡πÉ‡∏ô" popup ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß (‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏ä‡∏∑‡πà‡∏≠/‡∏£‡∏´‡∏±‡∏™/‡∏õ‡∏∏‡πà‡∏°) ‚Üí ‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏¢‡πà‡∏á‡πÇ‡∏ü‡∏Å‡∏±‡∏™
    if (newProductPopup.contains(ae)) return;

    // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å popup (‡πÄ‡∏ä‡πà‡∏ô body) ‚Üí ‡πÇ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
    npPrice.focus();
    return;
  }

  // ‡πÑ‡∏°‡πà‡∏°‡∏µ popup ‚Üí ‡∏Ñ‡∏∏‡∏°‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏õ‡∏Å‡∏ï‡∏¥
  if (cart.length === 0 && ae !== input) input.focus();
}


// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 500ms
setInterval(checkAndFocusInput, 500);

// ‚úÖ ‡∏´‡∏≤‡∏Å‡∏Å‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà popup ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î ‚Üí focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á productInput
document.addEventListener("keydown", function (event) {
  const isNumberKey = event.key >= '0' && event.key <= '9';
  const isPayPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";
  const isNewProdPopupOpen = window.getComputedStyle(newProductPopup).display !== "none";

  if (isNumberKey && !isPayPopupOpen && !isNewProdPopupOpen) {
    input.focus();
  }
});


document.addEventListener("keydown", function (event) {
  const isPayPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";
  const isNewProdPopupOpen = window.getComputedStyle(newProductPopup).display !== "none";

  if (event.key === "Enter" && !isPayPopupOpen && !isNewProdPopupOpen) {
    input.focus();
  }
});




//------------------‡∏Å‡∏î . ‡πÄ‡∏û‡∏∑‡πà‡∏≠ focus input ---------------------------------
document.addEventListener("keydown", function (event) {
    if (event.code === "NumpadDecimal") {
        event.preventDefault();
        input.focus();
        paymentPopup.style.display = "none";
    }
});
//------------------‡∏Å‡∏î . ‡πÄ‡∏û‡∏∑‡πà‡∏≠ focus input ---------------------------------

//------------------‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°+‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å pop up ‡∏ä‡∏≥‡∏£‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤---------------------------------
document.addEventListener("keydown", function (event) {
    if (event.code === 'NumpadAdd') {
        event.preventDefault();

        const popupDisplay = window.getComputedStyle(paymentPopup).display;

        if (popupDisplay === "none") {
            paymentPopup.style.display = "block";
        } else {
            paymentPopup.style.display = "none";
        }

        let totalQty = 0;
        let totalPrice = 0;

        cart.forEach(item => {
            const qty = parseInt(item.qtyInput.value);
            totalQty += qty;
            totalPrice += item.getTotal();
        });

        paymantUnitValue.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
        paymantPriceValue.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

        cashInput.focus();
        cashInput.value = "";

        if (!isNaN(totalPrice) && totalPrice > 0) {
            speak(`‡∏£‡∏ß‡∏°${totalPrice} ‡∏ö‡∏≤‡∏ó`);
        }
    }
});
//------------------‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°+‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å pop up ‡∏ä‡∏≥‡∏£‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤---------------------------------


//--------------------open pop up ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢----------------------------------------

const BTNSummarySales = document.getElementById("SummarySales");
const popupSummarySales = document.querySelector(".monitorTotalPrice-day");

BTNSummarySales.addEventListener("click", function () {
    if (popupSummarySales.style.display === "flex") {
        popupSummarySales.style.display = "none";
    } else {
        popupSummarySales.style.display = "flex";
        updateSalesSummary();
        setTimeout(function () {
            popupSummarySales.style.display = "none";
        }, 10000);
    }
});

//---------------------------inputproduct-----------------------------------------------------------
let enterPressed = false; // üîí ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏•‡πá‡∏≠‡∏Å

// üëâ ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏î Enter (keydown)
input.addEventListener("keydown", function (event) {
  if (event.key === "Enter" && !enterPressed) {
    enterPressed = true;

    const code = input.value.trim();

    if (code === "") {
  // ‡∏Å‡∏î Enter ‡∏ï‡∏≠‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ß‡πà‡∏≤‡∏á -> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  event.preventDefault(); // ‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏•‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á
  if (lastAddedProduct) {
    let currentQty = parseInt(lastAddedProduct.qtyInput.value, 10) || 1;
    currentQty += 1;
    lastAddedProduct.qtyInput.value = String(currentQty);

    const total = lastAddedProduct.price * currentQty;
    lastAddedProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

    updateSummary();
    speak(`${currentQty}`);  // ‡∏û‡∏π‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡πÄ‡∏ä‡πà‡∏ô "2", "3", ...)
  } else {
    // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡∏Å‡∏î Enter ‡∏ß‡πà‡∏≤‡∏á‡πÜ ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ (‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞ speak("‡πÑ‡∏°‡πà‡∏°‡∏µ") ‡∏Å‡πá‡πÑ‡∏î‡πâ)
    // speak("‡πÑ‡∏°‡πà‡∏°‡∏µ");
  }

  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï‡πÅ‡∏•‡∏∞‡∏Ñ‡∏á‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô
  input.value = "";
  input.focus();
  return;
}

    // ‚õî ‡∏Å‡∏±‡∏ô ‚Äú0‚Äù, ‚Äú00‚Äù, ‚Äú000‚Äù ‡∏Ø‡∏•‡∏Ø
    if (/^0+$/.test(code)) {
      input.value = "";
      return;
    }

    const value = Number(code);
    const foundProduct = productData.find(p => p.code === code);

    if (!Number.isNaN(value) && value >= 1 && value <= 9999) {
      addProductbox(value);
    } else if (foundProduct) {
      addProductbox(foundProduct.price, foundProduct.name, foundProduct.code);
    } else {
      speak("‡πÑ‡∏°‡πà‡∏°‡∏µ");
      openNewProductPopup(code);
    }

    input.value = "";
  }
});


// üëâ ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏° Enter (keyup) ‚Üí ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡πâ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏´‡∏°‡πà
input.addEventListener("keyup", function (event) {
    if (event.key === "Enter") {
        enterPressed = false;
    }
});



//-------------------‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤--------------------------------------------

//---------------‡∏Å‡∏î + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤----------------------------------
//--------------- ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Backspace (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡∏ö‡∏±‡πä‡∏Å) ------------------
let backspacePressed = false;

function isTypingContext(el) {
  if (!el) return false;
  const tag = el.tagName;
  const type = (el.type || '').toLowerCase();
  const isInput = tag === 'INPUT' && !['button','submit','checkbox','radio','range','file','color','date','time','month','week'].includes(type);
  return isInput || tag === 'TEXTAREA' || el.isContentEditable === true;
}

document.addEventListener("keydown", function (event) {
  if (event.key !== "Backspace" || backspacePressed) return;

  // ‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ï‡∏≠‡∏ô popup ‡πÉ‡∏î ‡πÜ ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
  const payOpen = window.getComputedStyle(paymentPopup).display !== "none";
  const newProdOpen = window.getComputedStyle(newProductPopup).display !== "none";
  if (payOpen || newProdOpen) return;

  const ae = document.activeElement;
  const typing = isTypingContext(ae);
  const isScanInput = ae === input;

  // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏¢‡∏π‡πà:
  // - ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡∏∞ "‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏≠‡∏¢‡∏π‡πà" ‡πÉ‡∏´‡πâ Backspace ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏•‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥ (return)
  // - ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô input ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ (‡πÄ‡∏ä‡πà‡∏ô cashInput, ‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏ä‡∏∑‡πà‡∏≠) ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥ (return)
  if (typing) {
    if (!isScanInput || (isScanInput && input.value.length > 0)) {
      return; // ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ú‡πà‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
    }
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏ï‡πà "‡∏ß‡πà‡∏≤‡∏á" ‚Üí ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏•‡∏±‡∏î ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ
  }

  // ‡∏ñ‡∏∂‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ Backspace ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏•‡∏±‡∏î‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
  backspacePressed = true;

  if (lastAddedProduct) {
    let currentQty = parseInt(lastAddedProduct.qtyInput.value, 10) || 1;

    if (currentQty > 1) {
      event.preventDefault();      // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏•‡∏ö‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï
      document.activeElement.blur(); // ‡∏Å‡∏±‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå repeat ‡πÉ‡∏ô‡∏ö‡∏≤‡∏á‡∏ö‡∏£‡∏≤‡∏ß‡πÄ‡∏ã‡∏≠‡∏£‡πå

      currentQty -= 1;
      lastAddedProduct.qtyInput.value = String(currentQty);
      const total = lastAddedProduct.price * currentQty;
      lastAddedProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

      updateSummary();
      speak(`${currentQty}`);
    }
    // ‡∏ñ‡πâ‡∏≤ currentQty === 1 ‚Üí ‡πÑ‡∏°‡πà preventDefault ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Backspace (‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡∏ß‡πà‡∏≤‡∏á) ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏≠‡∏∞‡πÑ‡∏£
  }
});

document.addEventListener("keyup", function (event) {
  if (event.key === "Backspace") {
    backspacePressed = false;
  }
});
//---------------------------------------------------------------------------


//---------------‡∏Å‡∏î + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤----------------------------------

//--------------------‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤-----------------------------------------------------------------------------

function addProductbox(price, name = "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ", code = "") {
  const mainbox = document.createElement("div");
  mainbox.className = "addProduct";

  const itemRow = document.createElement("div");
  itemRow.innerHTML = `
    <div>${name}</div>
    <div>${price.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>
  `;

  const qtyRow = document.createElement("div");
  const qtyLabel = document.createElement("div");
  qtyLabel.innerText = "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô";

  const qtyInput = document.createElement("input");
  qtyInput.type = "number";
  qtyInput.value = "1";
  qtyInput.min = "1";
  qtyInput.className = "qty-input";

  qtyRow.appendChild(qtyLabel);
  qtyRow.appendChild(qtyInput);

  const totalRow = document.createElement("div");
  const totalLabel = document.createElement("div");
  totalLabel.innerText = "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°";
  const totalValue = document.createElement("div");
  totalValue.innerText = `${price.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
  totalRow.appendChild(totalLabel);
  totalRow.appendChild(totalValue);

  // ‚ùå ‡πÄ‡∏≠‡∏≤ click ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà handler ‡∏•‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß

  const productItem = {
    name: name,
    price: price,
    code: code,            // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏µ‡∏ï
    qtyInput: qtyInput,
    totalValue: totalValue,
    getTotal: function () {
      return this.price * parseInt(this.qtyInput.value);
    }
  };

  // ‡∏ú‡∏π‡∏Å‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà DOM ‡∏Å‡∏•‡πà‡∏≠‡∏á
  mainbox._productItem = productItem;

  qtyInput.addEventListener("input", function () {
    let qty = parseInt(qtyInput.value);
    if (isNaN(qty) || qty < 1) {
      qty = 1;
      qtyInput.value = "1";
    }
    const total = productItem.price * qty;
    totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
    updateSummary();
    speak(`${qty}`);
  });

  cart.push(productItem);
  lastAddedProduct = productItem;

  mainbox.appendChild(itemRow);
  mainbox.appendChild(qtyRow);
  mainbox.appendChild(totalRow);
  addbox.insertBefore(mainbox, addbox.firstChild);

  updateSummary();
  speak(`${price} ‡∏ö‡∏≤‡∏ó`);
}


// ====== ‡πÅ‡∏ï‡∏∞‡∏Ñ‡πâ‡∏≤‡∏á 2 ‡∏ß‡∏¥ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ======
// ====== ‡πÅ‡∏ï‡∏∞ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á = ‡∏•‡∏ö, ‡πÅ‡∏ï‡∏∞‡∏Ñ‡πâ‡∏≤‡∏á 2 ‡∏ß‡∏¥ = ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ======
let holdTimer = null;
let holdTarget = null;
let holdTriggered = false;  // true ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö 2 ‡∏ß‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á

function startHold(target) {
  clearTimeout(holdTimer);
  holdTriggered = false;     // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà trigger
  holdTarget = target;
  holdTimer = setTimeout(() => {
    if (!holdTarget) return;
    holdTriggered = true;    // ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å hold
    editItem(holdTarget);    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    holdTarget = null;
  }, 2000); // 2 ‡∏ß‡∏¥
}
function cancelHold() {
  clearTimeout(holdTimer);
  holdTimer = null;
  holdTarget = null;
}

addbox.addEventListener('pointerdown', (e) => {
  const box = e.target.closest('.addProduct');
  if (!box) return;
  startHold(box);
});
['pointerup','pointerleave','pointercancel'].forEach(ev => {
  addbox.addEventListener(ev, cancelHold);
});

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡∏±‡πâ‡∏ô = ‡∏•‡∏ö (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ holdTriggered ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÅ‡∏ï‡∏∞‡∏Ñ‡πâ‡∏≤‡∏á ‚Üí ‡πÑ‡∏°‡πà‡∏•‡∏ö)
addbox.addEventListener('click', (e) => {
  const box = e.target.closest('.addProduct');
  if (!box) return;

  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÅ‡∏ï‡∏∞‡∏Ñ‡πâ‡∏≤‡∏á‡∏à‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ
  if (holdTriggered) {
    holdTriggered = false;   // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    return;
  }

  const item = box._productItem;
  if (!item) return;

  const index = cart.indexOf(item);
  if (index !== -1) {
    cart.splice(index, 1);
  }
  box.remove();
  updateSummary();
  if (lastAddedProduct === item) lastAddedProduct = null;
});





// ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (prompt ‡∏™‡∏±‡πâ‡∏ô‡πÜ)
function editItem(box){
  const item = box._productItem;
  if (!item) return;

  let newName = prompt('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', item.name);
  if (newName === null) return;             // ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
  newName = newName.trim() || '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ';

  let newPriceStr = prompt('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤', item.price);
  if (newPriceStr === null) return;         // ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
  const newPrice = Number(newPriceStr);
  if (!newPrice || newPrice <= 0) {
    alert('‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    return;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå
  item.name  = newName;
  item.price = newPrice;

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏±‡∏ß‡πÅ‡∏ñ‡∏ß‡∏ä‡∏∑‡πà‡∏≠/‡∏£‡∏≤‡∏Ñ‡∏≤
  const headerRow = box.querySelector(':scope > div:nth-child(1)');
  if (headerRow) {
    headerRow.innerHTML = `<div>${newName}</div><div>${newPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>`;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
  const qty = parseInt(item.qtyInput.value) || 1;
  item.totalValue.innerText = `${(newPrice * qty).toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

  updateSummary();

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ code)
  if (item.code) {
    const p = productData.find(pp => pp.code === item.code);
    if (p) { p.name = newName; p.price = newPrice; }
    updateProductInSheet(item.code, newName, newPrice);   // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏±‡∏ö
  } else {
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ code ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
    sendNewProductToSheet('', newName, newPrice);
  }
}














//------------------------‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°--------------------------------------------------------------------------

function updateSummary() {

    let totalQty = 0;
    let totalPrice = 0;

    cart.forEach(item => {
        const qty = parseInt(item.qtyInput.value);
        totalQty += qty;
        totalPrice += item.getTotal();
    });
    unitDisplay.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
    priceDisplay.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
}
//------------------------‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°--------------------------------------------------------------------------

//-------------------------‡πÉ‡∏™‡πà‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô-----------------------------------------------------------------------

cashInput.addEventListener("input", debounce(function () {
    const cash = parseInt(cashInput.value);

    let totalPrice = 0;
    cart.forEach(item => {
        totalPrice += item.getTotal();
    });

    let change = 0;
    if (!isNaN(cash)) {
        change = cash - totalPrice;
    }

    if (change < 0) {
        change = 0;
    }

    changeValue.innerText = `${change.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
    if (!isNaN(cash) && cash > 0) {
        speak(`‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô ${cash} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô ${change} ‡∏ö‡∏≤‡∏ó`);
    }
}, 500));

//--------------------paymant-close-----------------------------------------------------------------
const closeBtn = document.querySelector(".paymant-close");
closeBtn.addEventListener("click", function () {
    paymentPopup.style.display = "none";
});


//----------------------‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô----------------------------------------------------------------------

payButton.addEventListener("click", function () {
    let totalQty = 0;
    let totalPrice = 0;

    cart.forEach(item => {
        const qty = parseInt(item.qtyInput.value);
        totalQty += qty;
        totalPrice += item.getTotal();
    });

    paymantUnitValue.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
    paymantPriceValue.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

    paymentPopup.style.display = "block";

    cashInput.focus();
    if (!isNaN(totalPrice) && totalPrice > 0) {
        speak(`‡∏£‡∏ß‡∏°${totalPrice} ‡∏ö‡∏≤‡∏ó`);
    }
});

//----------------‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô--------------------------------------------------------------------------

const clearAllBTN = document.querySelector(".clearAll");
clearAllBTN.addEventListener("click", function () {
    paymentPopup.style.display = "none";

    cashInput.value = "";
    changeValue.innerText = `0 ‡∏ö‡∏≤‡∏ó`

    cart = [];
    addbox.innerHTML = "";

    updateSummary();
    
});

cashInput.addEventListener("keydown", function (event) {
    if (event.key === "Enter") {

        const cash = parseInt(cashInput.value);
        let change = 0;
        let totalPrice = 0;

        cart.forEach(item => {
            totalPrice += item.getTotal();
        });

        if (!isNaN(cash)) {
            change = cash - totalPrice;
        }
        if (change < 0) {
            change = 0;
        }

        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏´‡∏°‡πà ‡∏™‡πà‡∏á‡∏ó‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        sendSaleToSheet(cash, change);

        // ‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‚Üì ‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
        // ------------------ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ----------------------
        const bill = document.querySelector(".bill");
        const now = new Date();

        const timeStr = now.toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' });
        const dateStr = now.toLocaleDateString('th-TH');

        let totalQty = 0;
        totalPrice = 0;
        const items = [];

        cart.forEach(item => {
            const qty = parseInt(item.qtyInput.value);
            const total = item.getTotal();

            totalQty += qty;
            totalPrice += total;

            items.push({
                name: item.name,
                price: item.price,
                qty: qty,
                total: total
            });
        });

        // (‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‚Üì)
        // ...

        bill.innerHTML = `
    <div class="bill-head">‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡πâ‡∏û‡∏¥‡∏ô ‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ä‡∏≥</div>
    
    <div class="bill-detail"><div style="font-weight:bold ;">‡πÄ‡∏ß‡∏•‡∏≤:</div><div style="font-weight:bold ;">${timeStr}</div></div>
    <div class="bill-detail"><div style="font-weight:bold ;">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</div><div style="font-weight:bold ;">${dateStr}</div></div>

    <hr style="border:1px solid #ccc; margin:5px 0;"> <!-- ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ö‡πà‡∏á -->

    <div class="bill-detail"><div style="font-weight:bold ;">‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</div><div style="font-weight:bold ;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</div><div style="font-weight:bold ;">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</div></div>
`;


        items.forEach(item => {
            const itemRow = document.createElement("div");
            itemRow.className = "bill-detail";
            itemRow.innerHTML = `
                <div>${item.name} ${item.price.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>
                <div>x${item.qty}</div>
                <div>${item.total.toFixed(2)}</div>
            `;
            bill.appendChild(itemRow);
        });

        bill.innerHTML += `
            <div class="bill-detail"><div style="font-weight:bold;">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô</div><div style="font-weight:bold;">${totalPrice.toFixed(2)}</div></div>
            <div class="bill-detail"><div>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</div><div>${cash.toFixed(2)}</div></div>
            <div class="bill-detail"><div>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</div><div>‡∏ø${change.toFixed(2)}</div></div>
            <div style="text-align:center; font-size:1.5vw; padding-top:2vw;">‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏≠‡∏∏‡∏î‡∏´‡∏ô‡∏∏‡∏ô</div>
        `;

        // Show .bill
        bill.style.display = "block";

        // ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô localStorage ‚Üí ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô
        const receiptData = {
            date: dateStr,
            time: timeStr,
            items: items,
            total: totalPrice.toFixed(2),
            cashReceived: isNaN(cash) ? "0.00" : cash.toFixed(2),
            change: isNaN(change) ? "‡∏ø0.00" : `‡∏ø${change.toFixed(2)}`
        };


        let receiptHistory = JSON.parse(localStorage.getItem("receiptHistory")) || [];
        receiptHistory.push(receiptData);

        if (receiptHistory.length > 200) {
            receiptHistory = receiptHistory.slice(receiptHistory.length - 200);
        }

        localStorage.setItem("receiptHistory", JSON.stringify(receiptHistory));

        // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ hide .bill ‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setTimeout(() => {
            bill.style.display = "none";
        }, 3000);

        // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå popup ‡πÅ‡∏•‡∏∞ cart
        paymentPopup.style.display = "none";
        cashInput.value = "";
        changeValue.innerText = `0 ‡∏ö‡∏≤‡∏ó`;

        cart = [];
        addbox.innerHTML = "";
        lastAddedProduct = null;

        updateSummary();
        speak(`‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞`);
    }
});

// ‡πÉ‡∏ä‡πâ event delegation ‡πÅ‡∏ó‡∏ô
document.querySelector(".noncode-product").addEventListener("click", function (e) {
    const productDiv = e.target.closest(".manu-product");
    if (!productDiv) return; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà .manu-product ‚Üí ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ

    const name = productDiv.getAttribute("data-name");
    const price = parseInt(productDiv.getAttribute("data-price"));

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏ô cart ‡∏ß‡πà‡∏≤‡∏°‡∏µ product ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const existingProduct = cart.find(item => item.name === name && item.price === price);

    if (existingProduct) {
        let currentQty = parseInt(existingProduct.qtyInput.value);
        currentQty += 1;
        existingProduct.qtyInput.value = currentQty;

        const total = existingProduct.price * currentQty;
        existingProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

        updateSummary();
        speak(`${currentQty}`);
    } else {
        addProductbox(price, name);
    }
});













/* ===================== ‡∏û‡∏±‡∏Å‡∏ö‡∏¥‡∏•‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏¥‡∏• ===================== */
// ‡πÄ‡∏Å‡πá‡∏ö‡∏ö‡∏¥‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÑ‡∏ß‡πâ‡πÉ‡∏ô localStorage
let heldBills = [];
try {
  heldBills = JSON.parse(localStorage.getItem("heldBills") || "[]");
} catch { heldBills = []; }

function saveHeldBills() {
  localStorage.setItem("heldBills", JSON.stringify(heldBills));
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ panel ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á)
function ensureHeldPanel() {
  let panel = document.getElementById("heldPanel");
  if (!panel) {
    panel = document.createElement("div");
    panel.id = "heldPanel";
    panel.innerHTML = `
      <div class="heldPanel-header">
        <span>‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÑ‡∏ß‡πâ</span>
        <button id="heldPanelClose" title="‡∏õ‡∏¥‡∏î">√ó</button>
      </div>
      <div id="heldList" class="heldPanel-list"></div>
    `;
    document.body.appendChild(panel);

    document.getElementById("heldPanelClose").addEventListener("click", () => {
      panel.style.display = "none";
    });

    // ‡πÄ‡∏î‡πÄ‡∏•‡πÄ‡∏Å‡∏ï‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
    panel.addEventListener("click", (e) => {
      const btn = e.target.closest("button[data-action]");
      if (!btn) return;
      const action = btn.dataset.action;
      const id = btn.dataset.id;
      if (action === "resume") resumeHeldBill(id);
      if (action === "delete") deleteHeldBill(id);
    });
  }
  return panel;
}

function renderHeldList() {
  const panel = ensureHeldPanel();
  const list = panel.querySelector("#heldList");
  if (!heldBills.length) {
    list.innerHTML = `<div class="heldPanel-empty">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÑ‡∏ß‡πâ</div>`;
  } else {
    list.innerHTML = heldBills.map((b, idx) => {
      const created = new Date(b.createdAt);
      const when = created.toLocaleString(); // ‡πÄ‡∏ß‡∏•‡∏≤/‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•
      return `
        <div class="heldItem">
          <div class="heldItem-main">
            <div class="heldItem-title">‡∏ö‡∏¥‡∏• #${idx + 1}</div>
            <div class="heldItem-sub">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${b.items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‚Ä¢ ‡∏£‡∏ß‡∏° ${b.subtotal.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>
            <div class="heldItem-time">${when}</div>
          </div>
          <div class="heldItem-actions">
            <button data-action="resume" data-id="${b.id}">‡∏î‡∏∂‡∏á‡∏Å‡∏•‡∏±‡∏ö</button>
            <button data-action="delete" data-id="${b.id}" class="danger">‡∏•‡∏ö</button>
          </div>
        </div>
      `;
    }).join("");
  }
}

// ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì)
function clearCartUI() {
  try {
    // ‡∏•‡∏ö DOM ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏ô #addProduct_box
    const addboxEl = typeof addbox !== "undefined" ? addbox : document.getElementById("addProduct_box");
    if (addboxEl) addboxEl.innerHTML = "";
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥
    cart.length = 0;
    if (typeof lastAddedProduct !== "undefined") lastAddedProduct = null;
    if (typeof updateSummary === "function") updateSummary();
  } catch (e) {
    console.warn("clearCartUI warn:", e);
  }
}

// ‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡∏ì ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
function snapshotCurrentCart() {
  const items = cart.map(it => ({
    name: it.name,
    price: Number(it.price),
    qty: parseInt(it.qtyInput?.value || 1),
    code: it.code || ""
  }));
  const subtotal = items.reduce((s, i) => s + i.price * i.qty, 0);
  return { items, subtotal };
}

// ‡∏û‡∏±‡∏Å‡∏ö‡∏¥‡∏•: ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° id="billhold"
function holdCurrentBill() {
  if (!cart.length) {
    return;
  }
  const snap = snapshotCurrentCart();
  const id = String(Date.now());
  heldBills.unshift({
    id,
    createdAt: new Date().toISOString(),
    ...snap
  });
  saveHeldBills();
  renderHeldList();

  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏û‡∏±‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  clearCartUI();
  // ‡πÇ‡∏ä‡∏ß‡πå panel ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏û‡∏±‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  const panel = ensureHeldPanel();
  panel.style.display = "block";
}

// ‡∏î‡∏∂‡∏á‡∏ö‡∏¥‡∏•‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≤‡∏° id
function resumeHeldBill(id) {
  const idx = heldBills.findIndex(b => b.id === id);
  if (idx === -1) return;

  // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡∏ñ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏Å‡∏±‡∏ô‡πÄ‡∏ú‡∏•‡∏≠‡∏ó‡∏±‡∏ö)
  if (cart.length) {
    const ok = confirm("‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏∂‡∏á‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
    if (!ok) return;
    clearCartUI();
  }

  const bill = heldBills[idx];

  // üîá ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏î‡∏∂‡∏á‡∏ö‡∏¥‡∏•‡∏Å‡∏•‡∏±‡∏ö (‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≠‡∏ô addProductbox ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏á qty)
  const prevSpeak = window.speak;
  window.speak = function () { /* muted while resuming bill */ };

  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    bill.items.forEach(it => {
      addProductbox(it.price, it.name, it.code || "");
      // ‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÑ‡∏ß‡πâ
      const addboxEl = typeof addbox !== "undefined" ? addbox : document.getElementById("addProduct_box");
      const box = addboxEl.querySelector(".addProduct"); // ‡πÉ‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏™‡∏∏‡∏î
      if (box && box._productItem && box._productItem.qtyInput) {
        box._productItem.qtyInput.value = String(it.qty || 1);
        // trigger ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà (‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏Å‡πá‡πÄ‡∏á‡∏µ‡∏¢‡∏ö)
        box._productItem.qtyInput.dispatchEvent(new Event("input"));
      }
    });
  } finally {
    // üîä ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô
    window.speak = prevSpeak;
  }

  // ‡πÄ‡∏≠‡∏≤‡∏ö‡∏¥‡∏•‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å
  heldBills.splice(idx, 1);
  saveHeldBills();
  renderHeldList();

  // ‚ùå ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏π‡∏î‡∏ó‡∏ß‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏î ‡πÜ ‡∏ï‡∏≠‡∏ô‡∏î‡∏∂‡∏á‡∏ö‡∏¥‡∏•‡∏Å‡∏•‡∏±‡∏ö
  // speak?.("‡∏î‡∏∂‡∏á‡∏ö‡∏¥‡∏•‡∏Å‡∏•‡∏±‡∏ö");  // <- ‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å

  // ‡∏ã‡πà‡∏≠‡∏ô panel ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πà‡∏≠
  const panel = ensureHeldPanel();
  panel.style.display = "none";
}


// ‡∏•‡∏ö‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å
function deleteHeldBill(id) {
  const idx = heldBills.findIndex(b => b.id === id);
  if (idx === -1) return;
  const ok = confirm("‡∏•‡∏ö‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å‡∏ô‡∏µ‡πâ?");
  if (!ok) return;
  heldBills.splice(idx, 1);
  saveHeldBills();
  renderHeldList();
}

/* === hook ‡∏õ‡∏∏‡πà‡∏° "‡∏û‡∏±‡∏Å‡∏ö‡∏¥‡∏•" id="billhold" === */
(() => {
  const btn = document.getElementById("billhold");
  if (btn) btn.addEventListener("click", () => {
    // ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‚Üí ‡∏û‡∏±‡∏Å‡∏ö‡∏¥‡∏•
    if (cart.length > 0) {
      holdCurrentBill();
      return;
    }

    // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‚Üí ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ö‡∏¥‡∏•
    if (!heldBills.length) {
      // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å‡πÄ‡∏•‡∏¢
      speak?.("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å");
      const panel = ensureHeldPanel();
      renderHeldList();
      panel.style.display = "block"; // ‡πÇ‡∏ä‡∏ß‡πå‡πÅ‡∏ú‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÜ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏î‡πâ‡∏ß‡∏¢
      return;
    }

    if (heldBills.length === 1) {
      // ‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‚Üí ‡∏î‡∏∂‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      resumeHeldBill(heldBills[0].id);
      return;
    }

    // ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏¥‡∏• ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const panel = ensureHeldPanel();
    renderHeldList();
    panel.style.display = "block";
  });

  // ‡πÉ‡∏´‡πâ‡∏Å‡∏î F9 ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î panel ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å (‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
  document.addEventListener("keydown", (e) => {
    if (e.key === "F9") {
      const panel = ensureHeldPanel();
      panel.style.display = (panel.style.display === "block") ? "none" : "block";
      if (panel.style.display === "block") renderHeldList();
    }
  });

  // render ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏û‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
  if (heldBills.length) {
    const panel = ensureHeldPanel();
    renderHeldList();
    panel.style.display = "none";
  }
})();





document.addEventListener('keydown', (e) => {
  // ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î "/" ‡∏´‡∏£‡∏∑‡∏≠ NumpadDivide
  if (e.code === 'NumpadDivide' || e.key === '/') {
    // ‡∏ñ‡πâ‡∏≤ popup ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠ popup ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‚Üí ‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô
    const payOpen = window.getComputedStyle(paymentPopup).display !== 'none';
    const newProdOpen = window.getComputedStyle(newProductPopup).display !== 'none';
    if (payOpen || newProdOpen) return;

    e.preventDefault();

    // ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (lastAddedProduct) ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const box = getBoxForItem(lastAddedProduct);
    if (box) {
      editItem(box);            // ‚Üê ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    } else {
      speak?.('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
    }
  }
});
















// ------------------ ‡πÇ‡∏´‡∏•‡∏î Product List ‡∏à‡∏≤‡∏Å Google Sheet ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£-------------------------
//---------‡πÑ‡∏ü‡∏•‡πå + ‡πÅ‡∏ä‡∏£‡πå + ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ß‡πá‡∏õ + ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô app script---------------

let productData = []; // array ‡πÄ‡∏Å‡πá‡∏ö product ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

const sheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vReyUk4ahfjc5-kkIaRZloMwz3LwWc3LnYa2DYF40XQjv0yavN98SlzRsJbo5ilWYNsLtYcAfRh4hjL/pub?output=csv';
                  
fetch(sheetURL)
    .then(response => response.text())
    .then(data => {
        const rows = data.split('\n').slice(1); // ‡∏Ç‡πâ‡∏≤‡∏° header
        rows.forEach(row => {
            if (row.trim() === '') return;
            const cols = row.split(',');
            const product = {
                code: cols[0].trim(),
                name: cols[1].trim(),
                price: parseFloat(cols[2])
            };
            productData.push(product);
        });
        console.log("‡πÇ‡∏´‡∏•‡∏î Product List ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", productData);
    })
    .catch(error => {
        console.error('Error fetching Product List:', error);
    });




//------------------‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏•‡∏á google sheet-----------------------------------------------------------------------------
function sendSaleToSheet(received, change) {
    const items = cart.map(item => {
        const qty = parseInt(item.qtyInput.value);
        const product = productData.find(p => p.name === item.name && p.price === item.price);
        const code = product ? product.code : '';
        return {
            code: code,
            name: item.name,
            qty: qty,
            price: item.price
        };
    });

    const totalQty = cart.reduce((sum, item) => sum + parseInt(item.qtyInput.value), 0);
    const totalPrice = cart.reduce((sum, item) => sum + item.getTotal(), 0);

    const payload = {
        sheet: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        datetime: new Date().toISOString(), // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö script_old
        items: JSON.stringify(items),    // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö script_old
        totalQty: totalQty,
        totalPrice: totalPrice,
        received: received,
        change: change
    };

    const simpleBody = 'data=' + encodeURIComponent(JSON.stringify(payload));

    fetch('https://script.google.com/macros/s/AKfycbyQ2Q56PQolTPyvtBG26XGPqj6KvrmNxmePuDkOS2FxMA_flWXoYH9gLYQvAQmr2qbD6w/exec', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
        body: simpleBody,
        mode: 'no-cors'
    })
        .catch(err => console.error('‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err));
}




//--------------------‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á----------------------------------------------------------------------------

function parseDate(dateStr) {
    if (dateStr.includes('T')) {
        return dateStr.split('T')[0];
    }
    if (dateStr.includes('-') && dateStr.length === 10) {
        return dateStr;
    }
    if (dateStr.includes('/')) {
        const parts = dateStr.split('/');
        const day = parts[0].padStart(2, '0');
        const month = parts[1].padStart(2, '0');
        const year = parts[2];
        return `${year}-${month}-${day}`;
    }
    return '';
}

//--------------------‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á----------------------------------------------------------------------------
function getLocalTodayStr() {
    const now = new Date();
    now.setHours(0, 0, 0, 0); // ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00 ‚Üí ‡πÉ‡∏´‡πâ match ‡∏Å‡∏±‡∏ö timestamp ‡∏Ç‡∏≠‡∏á Google Sheet
    const year = now.getFullYear();
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const day = now.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}

function getLocalYesterdayStr() {
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    yesterday.setHours(0, 0, 0, 0); // ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00 ‚Üí ‡πÉ‡∏´‡πâ match ‡∏Å‡∏±‡∏ö timestamp ‡∏Ç‡∏≠‡∏á Google Sheet
    const year = yesterday.getFullYear();
    const month = (yesterday.getMonth() + 1).toString().padStart(2, '0');
    const day = yesterday.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}


//----------------------------‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°---------------------------------------------------------
function updateSalesSummary() {
    const saleSheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQJSMGhRf-b5wh1PTsfV0gRbO-n5qXkohpwOIJ_EemIxfbG-1fCwdxAPyRbbM6XuNHWIYVozEFba_pT/pub?gid=983528119&single=true&output=csv';
                          
    fetch(saleSheetURL)
        .then(response => response.text())
        .then(data => {
            console.log('CSV Data:', data);

            const rows = data.split('\n').slice(1);
            console.log('Parsed Rows:', rows);

            const todayStr = getLocalTodayStr();
            const yesterdayStr = getLocalYesterdayStr();

            console.log(`todayStr: ${todayStr} ‚Üí yesterdayStr: ${yesterdayStr}`);

            let totalToday = 0;
            let totalYesterday = 0;
            let total30Days = 0;

            rows.forEach(row => {
                console.log('Processing row:', row);

                const cols = row.split(',');
                const timestamp = cols[0]?.trim();
                const total = parseFloat(cols[1]?.replace(/[^\d.-]+/g, '') || '0');

                if (!timestamp) return;

                const parsedDateStr = parseDate(timestamp);
                console.log(`parsedDateStr: ${parsedDateStr} ‚Üí todayStr: ${todayStr} ‚Üí yesterdayStr: ${yesterdayStr}`);

                if (parsedDateStr === todayStr) {
                    totalToday += total;
                }

                if (parsedDateStr === yesterdayStr) {
                    totalYesterday += total;
                }

                const rowDate = new Date(parsedDateStr);
                const daysDiff = (new Date() - rowDate) / (1000 * 60 * 60 * 24);

                if (daysDiff <= 30 && daysDiff >= 0) {
                    total30Days += total;
                }
            });


            const summaryBoxes = document.querySelectorAll('.monitorTotalPrice-day > div > div:nth-child(2)');
            summaryBoxes[0].innerText = `${totalToday.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
            summaryBoxes[1].innerText = `${totalYesterday.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
            // summaryBoxes[2].innerText = `${total30Days.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
        })
        .catch(error => {
            console.error('Error fetching sales summary:', error);
        });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° URL ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    const monthlySheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQJSMGhRf-b5wh1PTsfV0gRbO-n5qXkohpwOIJ_EemIxfbG-1fCwdxAPyRbbM6XuNHWIYVozEFba_pT/pub?gid=762124129&single=true&output=csv';
                             

    fetch(monthlySheetURL)
        .then(response => response.text())
        .then(data => {
            console.log('Monthly CSV:', data);

            const rows = data.split('\n').slice(1);
            const currentMonth = new Date().getMonth() + 1; // JS ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 0-11 ‚Üí +1
            const currentYear = new Date().getFullYear();
            const currentMonthStr = `${currentMonth.toString().padStart(2, '0')}/${currentYear}`;

            let totalMonth = 0;

            rows.forEach(row => {
                const cols = row.split(',');
                const timestamp = cols[0]?.trim();
                const total = parseFloat(cols[1]?.trim() || '0');

                if (timestamp === currentMonthStr) {
                    totalMonth += total;
                }
            });

            console.log(`‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (${currentMonthStr}): ${totalMonth} ‡∏ö‡∏≤‡∏ó`);

            // ‡πÄ‡∏≠‡∏≤‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ó‡∏ô‡∏ä‡πà‡∏≠‡∏á 30 ‡∏ß‡∏±‡∏ô
            const summaryBoxes = document.querySelectorAll('.monitorTotalPrice-day > div > div:nth-child(2)');
            summaryBoxes[2].innerText = `${totalMonth.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
        })
        .catch(error => {
            console.error('Error fetching monthly sales:', error);
        });

}
//----------------------------‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°---------------------------------------------------------
const Btnreceipt = document.getElementById("receipt");
const receiptPopup = document.getElementById("receiptPopup");
const closeReceiptPopup = document.getElementById("closeReceiptPopup");
const receiptHistoryContent = document.getElementById("receiptHistoryContent");

Btnreceipt.addEventListener("click", function () {
    if (receiptPopup.style.display === "none") {
        // Show popup
        receiptPopup.style.display = "block";

        // Load receipt history
        let receiptHistory = JSON.parse(localStorage.getItem("receiptHistory")) || [];

        if (receiptHistory.length === 0) {
            receiptHistoryContent.innerHTML = "<p style='text-align:center;'>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á</p>";
            return;
        }

        // Clear content
        receiptHistoryContent.innerHTML = "";

        // Show last 100 receipts ‚Üí slice().reverse()
        receiptHistory.slice(-100).reverse().forEach((receipt, index) => {
            const receiptDiv = document.createElement("div");
            receiptDiv.style.border = "1px solid #ccc";
            receiptDiv.style.margin = "10px 0";
            receiptDiv.style.padding = "10px";
            receiptDiv.style.borderRadius = "10px";
            receiptDiv.style.background = "#f9f9f9";

            let itemHTML = `
                <div style="font-weight:bold; color:green;">üßæ ‡πÉ‡∏ö‡∏ó‡∏µ‡πà ${index + 1}</div>
                <div><b>‡πÄ‡∏ß‡∏•‡∏≤:</b> ${receipt.time}</div>
                <div><b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</b> ${receipt.date}</div>
                <div><b>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</b></div>
            `;

            if (Array.isArray(receipt.items)) {
                receipt.items.forEach(item => {
                    itemHTML += `
                        <div style="margin-left:20px;">
                            - ${item.name} (${item.price.toFixed(0)} ‡∏ö‡∏≤‡∏ó) x${item.qty} ‚Üí ${item.total.toFixed(2)} ‡∏ö‡∏≤‡∏ó
                        </div>
                    `;
                });
            }

            itemHTML += `
                <div><b>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô:</b> ${receipt.total} ‡∏ö‡∏≤‡∏ó</div>
                <div><b>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:</b> ${receipt.cashReceived} ‡∏ö‡∏≤‡∏ó</div>
                <div><b>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</b> ${receipt.change}</div>
            `;

            receiptDiv.innerHTML = itemHTML;
            receiptHistoryContent.appendChild(receiptDiv);
        });
    } else {
        // Hide popup
        receiptPopup.style.display = "none";
    }
});

// ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î popup
closeReceiptPopup.addEventListener("click", function () {
    receiptPopup.style.display = "none";
});




// ===================== Popup: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö =====================
const newProductPopup = document.getElementById("newProductPopup");
const modalBackdrop = document.getElementById("modalBackdrop");
const npCode = document.getElementById("np-code");
const npName = document.getElementById("np-name");
const npPrice = document.getElementById("np-price");
const npSave = document.getElementById("np-save");
const npError = document.getElementById("np-error");
const closeNewProductPopup = document.getElementById("closeNewProductPopup");

// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ input ‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì
// ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏≠ scanInput ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô input ‡∏î‡πâ‡∏ß‡∏¢ scanInput
// const input = typeof scanInput !== "undefined" ? scanInput : document.getElementById("scan-input");

// productData: ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ (‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
// ‡πÄ‡∏ä‡πà‡∏ô [{ code: "1001", name: "‡πÇ‡∏Ñ‡πâ‡∏Å", price: 15 }, ...]
window.productData = window.productData || [];

function openNewProductPopup(codeStr) {
  npError.style.display = "none";
  npError.textContent = "";

  npCode.value = (codeStr || "").trim();
  npName.value = "";
  npPrice.value = "";

  newProductPopup.style.display = "block";
  modalBackdrop.style.display = "block";

  // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥, ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™
  newProductPopup.onfocusin = (e) => {
    if (e.target === npCode) {
      e.preventDefault();
    }
  };

  // ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î
  setTimeout(() => { npPrice.focus({ preventScroll: true }); npPrice.select(); }, 0);
}


function closeNewProduct() {
  newProductPopup.style.display = "none";
  modalBackdrop.style.display = "none";
  input?.focus();
}



if (closeNewProductPopup) closeNewProductPopup.addEventListener("click", closeNewProduct);
if (modalBackdrop) modalBackdrop.addEventListener("click", closeNewProduct);

// ‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ = ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
if (npPrice) {
  npPrice.addEventListener("keydown", (e) => {
    if (e.key === "Enter") {
      e.preventDefault();
      npSave.click();
    }
  });
}

if (npSave) {
  npSave.addEventListener("click", () => {
    const codeStr = (npCode.value || "").trim();
    let nameStr = (npName.value || "").trim();
    const priceNum = parseFloat(npPrice.value);

    if (!priceNum || priceNum <= 0) {
      npError.textContent = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (> 0)";
      npError.style.display = "block";
      npPrice.focus();
      return;
    }
    if (!nameStr) nameStr = "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ";

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô addProductbox ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ñ‡∏∏‡∏ì)
    // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏™‡πà‡∏á (‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏ä‡∏∑‡πà‡∏≠)
    addProductbox(priceNum, nameStr, codeStr);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ (‡∏à‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ)
    productData.push({ code: codeStr, name: nameStr, price: priceNum });

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheet ‡∏ú‡πà‡∏≤‡∏ô Apps Script
    // !!! ‡πÅ‡∏Å‡πâ URL ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Apps Script Web App ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà !!!
    sendNewProductToSheet(codeStr, nameStr, priceNum);

    // ‡∏õ‡∏¥‡∏î popup
    closeNewProduct();
  });
}
// ===================== End Popup =====================

// ----------- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheet -------------
// ‡πÉ‡∏ä‡πâ endpoint ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå sheet)
function sendNewProductToSheet(code, name, price) {
  const payload = {
    sheet: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    code: code,
    name: name,
    price: price
  };

  const simpleBody = "data=" + encodeURIComponent(JSON.stringify(payload));

  fetch("https://script.google.com/macros/s/AKfycbz8kNKW-lLc3PxD-4MtzLWm_EJ40sn5s0-ihgc8sa-UO5RYHNhtsn0tns1j_bO8n9D2OQ/exec", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" },
    body: simpleBody,
    mode: "no-cors"
  }).catch(err => console.error("‚ùå ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err));
}


// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ Google Sheet
// const payload = {
//   sheet: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
//   code: "123456",
//   name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ",  // ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ù‡∏±‡πà‡∏á Apps Script ‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
//   price: 25
// };
// const body = "data=" + encodeURIComponent(JSON.stringify(payload));

// fetch("https://script.google.com/macros/s/AKfycbwZGY23pGHlopc5O7pzxowOGqAJBhlNI9ge2cpbrM15SfJ30EcHfuxDmZJwkWkvV9-O6g/exec", {
//   method: "POST",
//   headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" },
//   body,
//   mode: "no-cors"
// });


function updateProductInSheet(code, name, price) {
  if (!code) return;
  const payload = {
    action: "update_product",
    sheet: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
    code: code,
    name: name,
    price: price
  };
  const body = "data=" + encodeURIComponent(JSON.stringify(payload));

  fetch("https://script.google.com/macros/s/AKfycbz8kNKW-lLc3PxD-4MtzLWm_EJ40sn5s0-ihgc8sa-UO5RYHNhtsn0tns1j_bO8n9D2OQ/exec", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded;charset=UTF-8" },
    body,
    mode: "no-cors"
  }).catch(err => console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err));
}



function getBoxForItem(item) {
  if (!item) return null;
  const boxes = addbox.querySelectorAll('.addProduct');
  for (const box of boxes) {
    if (box._productItem === item) return box;
  }
  return null;
}