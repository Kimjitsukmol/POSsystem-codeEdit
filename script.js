let cart = [];
let lastAddedProduct = null;

const payButton = document.querySelector(".pay");
const paymentPopup = document.getElementById("paymant");

const paymantUnitValue = document.getElementById("paymant-unit-value");
const paymantPriceValue = document.getElementById("paymant-price-value");

const cashInput = document.getElementById("cashInput");
const changeValue = document.getElementById("change-value");

const input = document.getElementById("productInput");
const addbox = document.getElementById("addProduct_box");

const unitDisplay = document.querySelector(".unit div:nth-child(2)");
const priceDisplay = document.querySelector(".price div:nth-child(2)");

//-------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö icon -----------------------
const products = [
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏™‡∏¥‡∏á‡∏´‡πå", price: 50, img: "‡∏ô‡πâ‡∏≥‡∏™‡∏¥‡∏á‡∏´‡πå.jpeg" },
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ó‡∏¥‡∏û‡∏¢‡πå", price: 48, img: "‡∏ô‡πâ‡∏≥‡∏ó‡∏¥‡∏û‡∏¢‡πå.jpeg" },
    { name: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡πÄ‡∏•‡∏¥‡∏ü", price: 29, img: "‡∏ô‡πâ‡∏≥‡πÄ‡∏•‡∏¥‡∏ü.jpeg" },
    { name: "‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", price: 10, img: "‡∏ô‡πâ‡∏≥‡πÄ‡πÄ‡∏Ç‡πá‡∏á.jpeg" },
    { name: "‡∏ô‡πâ‡∏≥‡∏ñ‡∏±‡∏á‡∏ü‡πâ‡∏≤", price: 25, img: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ñ‡∏±‡∏á‡∏ü‡πâ‡∏≤.jpeg" },
    { name: "‡∏ñ‡πà‡∏≤‡∏ô‡∏ñ‡∏±‡∏á‡∏Ç‡∏≤‡∏ß", price: 15, img: "‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ñ‡∏±‡∏á‡∏Ç‡∏≤‡∏ß.jpeg" },
    { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤", price: 9, img: "‡πÑ‡∏Ç‡πà‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏ß‡∏°‡πâ‡∏≤.jpeg" },
    { name: "‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°", price: 8, img: "‡πÑ‡∏Ç‡πà‡πÄ‡∏Ñ‡πá‡∏°.jpeg" },
    { name: "‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà", price: 5, img: "‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà.jpeg" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏ñ‡∏±‡∏á‡πÉ‡∏´‡∏ç‡πà 15 ‡πÇ‡∏•", price: 460, img: "‡πÅ‡∏Å‡πä‡∏™ 15 ‡πÇ‡∏•.jpeg" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏ñ‡∏±‡∏á 9.5 ‡πÇ‡∏•", price: 310, img: "‡πÅ‡∏Å‡πä‡∏™ 10 ‡πÇ‡∏•.jpeg" },
    { name: "‡πÅ‡∏Å‡πä‡∏™‡∏õ‡∏¥‡πä‡∏Å‡∏ô‡∏¥‡∏Ñ", price: 180, img: "‡πÅ‡∏Å‡πä‡∏™‡∏õ‡∏¥‡πä‡∏Å‡∏ô‡∏¥‡∏Ñ.jpeg" },
    { name: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î", price: 50, img: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î.jpeg" },
    { name: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î‡∏ó‡∏≤‡∏á‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß", price: 40, img: "‡πÑ‡∏°‡πâ‡∏Å‡∏ß‡∏≤‡∏î‡∏ó‡∏≤‡∏á‡∏°‡∏∞‡∏û‡∏£‡πâ‡∏≤‡∏ß.jpeg" },
    { name: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô 91,95", price: 40, img: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô 91,95.jpeg" },
    { name: "‡πÄ‡∏ï‡∏≤‡∏ñ‡πà‡∏≤‡∏ô", price: 130, img: "‡πÄ‡∏ï‡∏≤‡∏ñ‡πà‡∏≤‡∏ô.jpeg" },
    { name: "‡∏ñ‡πà‡∏≤‡∏ô‡∏´‡∏∏‡∏á‡∏ï‡πâ‡∏°", price: 20, img: "‡∏ñ‡πà‡∏≤‡∏ô‡∏´‡∏∏‡∏á‡∏ï‡πâ‡∏°.jpeg" },
    { name: "‡∏´‡∏≠‡∏° ‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°", price: 20, img: "‡∏´‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°.png" }
];

function renderProducts() {
    const container = document.querySelector(".noncode-product");
    // container.innerHTML = ''; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô

    products.forEach(product => {
        const productDiv = document.createElement("div");
        productDiv.className = "manu-product";
        productDiv.setAttribute("data-name", product.name);
        productDiv.setAttribute("data-price", product.price);

        productDiv.innerHTML = `
            <div><img src="${product.img}" alt=""></div>
            <div>‡∏ø${product.price.toFixed(2)}</div>
        `;

        container.appendChild(productDiv);
    });
}

document.addEventListener("DOMContentLoaded", function() {
    renderProducts();
});



// -------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î---------------------------------------------------------------------
function speak(text) {
    const utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = 'th-TH';
    speechSynthesis.speak(utterance);
}

// -------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î---------------------------------------------------------------------

//------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤-------------------------------------------------------------------
function debounce(func, delay) {
    let timeout;
    return function (...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), delay);
    };
}

//------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤-------------------------------------------------------------------

//-------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤------------------------------------------------------
function updateClock() {
    const now = new Date();

    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    const seconds = String(now.getSeconds()).padStart(2, '0');

    const timeString = `${hours}:${minutes}:${seconds}`;

    document.getElementById('time').textContent = timeString;
}

setInterval(updateClock, 1000);
updateClock();
//-------------------‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤------------------------------------------------------

//--------------‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏õ focus ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤--------------------------------------
window.addEventListener("DOMContentLoaded", function () {
    input.focus();
});

// ‚úÖ Focus ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
function checkAndFocusInput() {
    const isPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";

    if (isPopupOpen) {
        cashInput.focus();
    } else if (cart.length === 0) {
        input.focus();
    }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 500ms
setInterval(checkAndFocusInput, 500);

// ‚úÖ ‡∏´‡∏≤‡∏Å‡∏Å‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà popup ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î ‚Üí focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á productInput
document.addEventListener("keydown", function (event) {
    const isNumberKey = event.key >= '0' && event.key <= '9';
    const isPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";

    if (isNumberKey && !isPopupOpen) {
        input.focus();
    }
});

document.addEventListener("keydown", function (event) {
    const isPopupOpen = window.getComputedStyle(paymentPopup).display !== "none";

    if (event.key === "Enter" && !isPopupOpen) {
        input.focus();
    }
});



//------------------‡∏Å‡∏î . ‡πÄ‡∏û‡∏∑‡πà‡∏≠ focus input ---------------------------------
document.addEventListener("keydown", function (event) {
    if (event.code === "NumpadDecimal") {
        event.preventDefault();
        input.focus();
        paymentPopup.style.display = "none";
    }
});
//------------------‡∏Å‡∏î . ‡πÄ‡∏û‡∏∑‡πà‡∏≠ focus input ---------------------------------

//------------------‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°+‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å pop up ‡∏ä‡∏≥‡∏£‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤---------------------------------
document.addEventListener("keydown", function (event) {
    if (event.code === 'NumpadAdd') {
        event.preventDefault();

        const popupDisplay = window.getComputedStyle(paymentPopup).display;

        if (popupDisplay === "none") {
            paymentPopup.style.display = "block";
        } else {
            paymentPopup.style.display = "none";
        }

        let totalQty = 0;
        let totalPrice = 0;

        cart.forEach(item => {
            const qty = parseInt(item.qtyInput.value);
            totalQty += qty;
            totalPrice += item.getTotal();
        });

        paymantUnitValue.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
        paymantPriceValue.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

        cashInput.focus();
        cashInput.value = "";

        if (!isNaN(totalPrice) && totalPrice > 0) {
            speak(`‡∏£‡∏ß‡∏°${totalPrice} ‡∏ö‡∏≤‡∏ó`);
        }
    }
});
//------------------‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°+‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å pop up ‡∏ä‡∏≥‡∏£‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤---------------------------------



//---------------------Open to produceList.html----------------------------------
const productList = document.getElementById("productList");
productList.addEventListener("click", function () {
    window.location.href = "productList.html";
});

//--------------------open pop up ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢----------------------------------------

const BTNSummarySales = document.getElementById("SummarySales");
const popupSummarySales = document.querySelector(".monitorTotalPrice-day");

BTNSummarySales.addEventListener("click", function () {
    if (popupSummarySales.style.display === "flex") {
        popupSummarySales.style.display = "none";
    } else {
        popupSummarySales.style.display = "flex";
        updateSalesSummary();
        setTimeout(function () {
            popupSummarySales.style.display = "none";
        }, 10000);
    }
});

//---------------------------inputproduct-----------------------------------------------------------
let enterPressed = false; // üîí ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏•‡πá‡∏≠‡∏Å

// üëâ ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏î Enter (keydown)
input.addEventListener("keydown", function (event) {
    if (event.key === "Enter" && !enterPressed) {
        enterPressed = true; // ‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏õ‡∏•‡πà‡∏≠‡∏¢

        const code = input.value.trim();

        if (code === "") {
            if (lastAddedProduct) {
                let currentQty = parseInt(lastAddedProduct.qtyInput.value);
                currentQty += 1;
                lastAddedProduct.qtyInput.value = currentQty;

                const total = lastAddedProduct.price * currentQty;
                lastAddedProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

                updateSummary();
                speak(`${currentQty}`);
            } else {
                // speak("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô");
            }
            input.value = "";
            return;
        }

        const value = parseInt(code);
        const foundProduct = productData.find(p => p.code === code);

        if (!isNaN(value) && value >= 1 && value <= 10000) {
            addProductbox(value);
        } else if (foundProduct) {
            addProductbox(foundProduct.price, foundProduct.name);
        } else {
            speak("‡πÑ‡∏°‡πà‡∏°‡∏µ");
        }

        input.value = "";
    }
});

// üëâ ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏° Enter (keyup) ‚Üí ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡πâ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏´‡∏°‡πà
input.addEventListener("keyup", function (event) {
    if (event.key === "Enter") {
        enterPressed = false;
    }
});



//-------------------‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤--------------------------------------------

//---------------‡∏Å‡∏î + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤----------------------------------
let backspacePressed = false;

document.addEventListener("keydown", function (event) {
    if (event.key === "Backspace" && !backspacePressed) {
        backspacePressed = true;

        if (lastAddedProduct) {
            let currentQty = parseInt(lastAddedProduct.qtyInput.value);

            if (currentQty > 1) {
                event.preventDefault(); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏ö‡πÉ‡∏ô input
                document.activeElement.blur(); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå

                currentQty -= 1;
                lastAddedProduct.qtyInput.value = currentQty;

                const total = lastAddedProduct.price * currentQty;
                lastAddedProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

                updateSummary();
                speak(`${currentQty}`);
            }
            // ‚ùó ‡∏ñ‡πâ‡∏≤ currentQty == 1 ‚Üí ‡πÑ‡∏°‡πà preventDefault ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
        }
    }
});

document.addEventListener("keyup", function (event) {
    if (event.key === "Backspace") {
        backspacePressed = false;
    }
});




//---------------‡∏Å‡∏î + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤----------------------------------

//--------------------‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤-----------------------------------------------------------------------------

function addProductbox(price, name = "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ") {
    const mainbox = document.createElement("div");
    mainbox.className = "addProduct";

    const itemRow = document.createElement("div");
    itemRow.innerHTML = `
        <div>${name}</div>
        <div>${price.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>
    `;
    const qtyRow = document.createElement("div");
    const qtyLabel = document.createElement("div");
    qtyLabel.innerText = "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô";

    const qtyInput = document.createElement("input");
    qtyInput.type = "number";
    qtyInput.value = "1";
    qtyInput.min = "1";
    qtyInput.className = "qty-input";

    qtyRow.appendChild(qtyLabel);
    qtyRow.appendChild(qtyInput);

    const totalRow = document.createElement("div");
    const totalLabel = document.createElement("div");
    totalLabel.innerText = "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°";
    const totalValue = document.createElement("div");
    totalValue.innerText = `${price.toFixed()} ‡∏ö‡∏≤‡∏ó`;

    totalRow.appendChild(totalLabel);
    totalRow.appendChild(totalValue);

    mainbox.addEventListener("click", function () {
    const index = cart.indexOf(productItem);
    if (index !== -1) {
        cart.splice(index, 1);
        mainbox.remove();
        updateSummary();
        // speak("‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        if (lastAddedProduct === productItem) {
            lastAddedProduct = null;
        }
    }
});


    const productItem = {
        name: name,
        price: price,
        qtyInput: qtyInput,
        totalValue: totalValue,
        getTotal: function () {
            return this.price * parseInt(this.qtyInput.value);
        }
    };

    qtyInput.addEventListener("input", function () {
        let qty = parseInt(qtyInput.value);
        if (isNaN(qty) || qty < 1) {
            qty = 1;
            qtyInput.value = "1";
        }
        const total = price * qty;
        totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

        updateSummary();
        speak(`${qty}`);
    });

    cart.push(productItem);
    lastAddedProduct = productItem;

    mainbox.appendChild(itemRow);
    mainbox.appendChild(qtyRow);
    mainbox.appendChild(totalRow);
    addbox.insertBefore(mainbox, addbox.firstChild);

    updateSummary();
    speak(`${price} ‡∏ö‡∏≤‡∏ó`);
}

//------------------------‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°--------------------------------------------------------------------------

function updateSummary() {

    let totalQty = 0;
    let totalPrice = 0;

    cart.forEach(item => {
        const qty = parseInt(item.qtyInput.value);
        totalQty += qty;
        totalPrice += item.getTotal();
    });
    unitDisplay.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
    priceDisplay.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
}
//------------------------‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°--------------------------------------------------------------------------

//-------------------------‡πÉ‡∏™‡πà‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô-----------------------------------------------------------------------

cashInput.addEventListener("input", debounce(function () {
    const cash = parseInt(cashInput.value);

    let totalPrice = 0;
    cart.forEach(item => {
        totalPrice += item.getTotal();
    });

    let change = 0;
    if (!isNaN(cash)) {
        change = cash - totalPrice;
    }

    if (change < 0) {
        change = 0;
    }

    changeValue.innerText = `${change.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
    if (!isNaN(cash) && cash > 0) {
        speak(`‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô ${cash} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô ${change} ‡∏ö‡∏≤‡∏ó`);
    }
}, 500));

//--------------------paymant-close-----------------------------------------------------------------
const closeBtn = document.querySelector(".paymant-close");
closeBtn.addEventListener("click", function () {
    paymentPopup.style.display = "none";
});


//----------------------‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô----------------------------------------------------------------------

payButton.addEventListener("click", function () {
    let totalQty = 0;
    let totalPrice = 0;

    cart.forEach(item => {
        const qty = parseInt(item.qtyInput.value);
        totalQty += qty;
        totalPrice += item.getTotal();
    });

    paymantUnitValue.innerText = `${totalQty} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
    paymantPriceValue.innerText = `${totalPrice.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

    paymentPopup.style.display = "block";

    cashInput.focus();
    if (!isNaN(totalPrice) && totalPrice > 0) {
        speak(`‡∏£‡∏ß‡∏°${totalPrice} ‡∏ö‡∏≤‡∏ó`);
    }
});

//----------------‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô--------------------------------------------------------------------------

const clearAllBTN = document.querySelector(".clearAll");
clearAllBTN.addEventListener("click", function () {
    paymentPopup.style.display = "none";

    cashInput.value = "";
    changeValue.innerText = `0 ‡∏ö‡∏≤‡∏ó`

    cart = [];
    addbox.innerHTML = "";

    updateSummary();
    
});

cashInput.addEventListener("keydown", function (event) {
    if (event.key === "Enter") {

        const cash = parseInt(cashInput.value);
        let change = 0;
        let totalPrice = 0;

        cart.forEach(item => {
            totalPrice += item.getTotal();
        });

        if (!isNaN(cash)) {
            change = cash - totalPrice;
        }
        if (change < 0) {
            change = 0;
        }

        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏´‡∏°‡πà ‡∏™‡πà‡∏á‡∏ó‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        sendSaleToSheet(cash, change);

        // ‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‚Üì ‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
        // ------------------ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ----------------------
        const bill = document.querySelector(".bill");
        const now = new Date();

        const timeStr = now.toLocaleTimeString('th-TH', { hour: '2-digit', minute: '2-digit' });
        const dateStr = now.toLocaleDateString('th-TH');

        let totalQty = 0;
        totalPrice = 0;
        const items = [];

        cart.forEach(item => {
            const qty = parseInt(item.qtyInput.value);
            const total = item.getTotal();

            totalQty += qty;
            totalPrice += total;

            items.push({
                name: item.name,
                price: item.price,
                qty: qty,
                total: total
            });
        });

        // (‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‚Üì)
        // ...

        bill.innerHTML = `
    <div class="bill-head">‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡πâ‡∏û‡∏¥‡∏ô ‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ä‡∏≥</div>
    
    <div class="bill-detail"><div style="font-weight:bold ;">‡πÄ‡∏ß‡∏•‡∏≤:</div><div style="font-weight:bold ;">${timeStr}</div></div>
    <div class="bill-detail"><div style="font-weight:bold ;">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</div><div style="font-weight:bold ;">${dateStr}</div></div>

    <hr style="border:1px solid #ccc; margin:5px 0;"> <!-- ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ö‡πà‡∏á -->

    <div class="bill-detail"><div style="font-weight:bold ;">‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</div><div style="font-weight:bold ;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</div><div style="font-weight:bold ;">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</div></div>
`;


        items.forEach(item => {
            const itemRow = document.createElement("div");
            itemRow.className = "bill-detail";
            itemRow.innerHTML = `
                <div>${item.name} ${item.price.toFixed(0)} ‡∏ö‡∏≤‡∏ó</div>
                <div>x${item.qty}</div>
                <div>${item.total.toFixed(2)}</div>
            `;
            bill.appendChild(itemRow);
        });

        bill.innerHTML += `
            <div class="bill-detail"><div style="font-weight:bold;">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô</div><div style="font-weight:bold;">${totalPrice.toFixed(2)}</div></div>
            <div class="bill-detail"><div>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</div><div>${cash.toFixed(2)}</div></div>
            <div class="bill-detail"><div>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</div><div>‡∏ø${change.toFixed(2)}</div></div>
            <div style="text-align:center; font-size:1.5vw; padding-top:2vw;">‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏≠‡∏∏‡∏î‡∏´‡∏ô‡∏∏‡∏ô</div>
        `;

        // Show .bill
        bill.style.display = "block";

        // ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô localStorage ‚Üí ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô
        const receiptData = {
            date: dateStr,
            time: timeStr,
            items: items,
            total: totalPrice.toFixed(2),
            cashReceived: isNaN(cash) ? "0.00" : cash.toFixed(2),
            change: isNaN(change) ? "‡∏ø0.00" : `‡∏ø${change.toFixed(2)}`
        };


        let receiptHistory = JSON.parse(localStorage.getItem("receiptHistory")) || [];
        receiptHistory.push(receiptData);

        if (receiptHistory.length > 200) {
            receiptHistory = receiptHistory.slice(receiptHistory.length - 200);
        }

        localStorage.setItem("receiptHistory", JSON.stringify(receiptHistory));

        // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ hide .bill ‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setTimeout(() => {
            bill.style.display = "none";
        }, 3000);

        // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå popup ‡πÅ‡∏•‡∏∞ cart
        paymentPopup.style.display = "none";
        cashInput.value = "";
        changeValue.innerText = `0 ‡∏ö‡∏≤‡∏ó`;

        cart = [];
        addbox.innerHTML = "";
        lastAddedProduct = null;

        updateSummary();
        speak(`‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞`);
    }
});

// ‡πÉ‡∏ä‡πâ event delegation ‡πÅ‡∏ó‡∏ô
document.querySelector(".noncode-product").addEventListener("click", function (e) {
    const productDiv = e.target.closest(".manu-product");
    if (!productDiv) return; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà .manu-product ‚Üí ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ

    const name = productDiv.getAttribute("data-name");
    const price = parseInt(productDiv.getAttribute("data-price"));

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏ô cart ‡∏ß‡πà‡∏≤‡∏°‡∏µ product ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const existingProduct = cart.find(item => item.name === name && item.price === price);

    if (existingProduct) {
        let currentQty = parseInt(existingProduct.qtyInput.value);
        currentQty += 1;
        existingProduct.qtyInput.value = currentQty;

        const total = existingProduct.price * currentQty;
        existingProduct.totalValue.innerText = `${total.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;

        updateSummary();
        speak(`${currentQty}`);
    } else {
        addProductbox(price, name);
    }
});



// ------------------ ‡πÇ‡∏´‡∏•‡∏î Product List ‡∏à‡∏≤‡∏Å Google Sheet ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£-------------------------
//---------‡πÑ‡∏ü‡∏•‡πå + ‡πÅ‡∏ä‡∏£‡πå + ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ß‡πá‡∏õ + ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô app script---------------

let productData = []; // array ‡πÄ‡∏Å‡πá‡∏ö product ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

const sheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSqBOz0tlVSxOI5LO34IzqzvKla3tgIos1rmvjwcmp0xJrq0rCdeNQykGCinq0gM-6dJSS5DYQ-nMrj/pub?output=csv';

fetch(sheetURL)
    .then(response => response.text())
    .then(data => {
        const rows = data.split('\n').slice(1); // ‡∏Ç‡πâ‡∏≤‡∏° header
        rows.forEach(row => {
            if (row.trim() === '') return;
            const cols = row.split(',');
            const product = {
                code: cols[0].trim(),
                name: cols[1].trim(),
                price: parseFloat(cols[2])
            };
            productData.push(product);
        });
        console.log("‡πÇ‡∏´‡∏•‡∏î Product List ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", productData);
    })
    .catch(error => {
        console.error('Error fetching Product List:', error);
    });




//------------------‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏•‡∏á google sheet-----------------------------------------------------------------------------
function sendSaleToSheet(received, change) {
    const items = cart.map(item => {
        const qty = parseInt(item.qtyInput.value);
        const product = productData.find(p => p.name === item.name && p.price === item.price);
        const code = product ? product.code : '';
        return {
            code: code,
            name: item.name,
            qty: qty,
            price: item.price
        };
    });

    const totalQty = cart.reduce((sum, item) => sum + parseInt(item.qtyInput.value), 0);
    const totalPrice = cart.reduce((sum, item) => sum + item.getTotal(), 0);

    const payload = {
        sheet: "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢",
        datetime: new Date().toISOString(), // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö script_old
        items: JSON.stringify(items),    // ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö script_old
        totalQty: totalQty,
        totalPrice: totalPrice,
        received: received,
        change: change
    };

    const simpleBody = 'data=' + encodeURIComponent(JSON.stringify(payload));

    fetch('https://script.google.com/macros/s/AKfycbyL63QfbS9zh41-l_C3VtlPDWZOQoUfe5nhmREi_P-fyotSAjVH0NRBL4Nbz6xahF2E/exec', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
        body: simpleBody,
        mode: 'no-cors'
    })
        .catch(err => console.error('‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err));
}




//--------------------‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á----------------------------------------------------------------------------

function parseDate(dateStr) {
    if (dateStr.includes('T')) {
        return dateStr.split('T')[0];
    }
    if (dateStr.includes('-') && dateStr.length === 10) {
        return dateStr;
    }
    if (dateStr.includes('/')) {
        const parts = dateStr.split('/');
        const day = parts[0].padStart(2, '0');
        const month = parts[1].padStart(2, '0');
        const year = parts[2];
        return `${year}-${month}-${day}`;
    }
    return '';
}

//--------------------‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á----------------------------------------------------------------------------
function getLocalTodayStr() {
    const now = new Date();
    now.setHours(0, 0, 0, 0); // ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00 ‚Üí ‡πÉ‡∏´‡πâ match ‡∏Å‡∏±‡∏ö timestamp ‡∏Ç‡∏≠‡∏á Google Sheet
    const year = now.getFullYear();
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const day = now.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}

function getLocalYesterdayStr() {
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    yesterday.setHours(0, 0, 0, 0); // ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00 ‚Üí ‡πÉ‡∏´‡πâ match ‡∏Å‡∏±‡∏ö timestamp ‡∏Ç‡∏≠‡∏á Google Sheet
    const year = yesterday.getFullYear();
    const month = (yesterday.getMonth() + 1).toString().padStart(2, '0');
    const day = yesterday.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}


//----------------------------‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°---------------------------------------------------------
function updateSalesSummary() {
    const saleSheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQbRzocopmLvEUtBdAHbk4fiIcaxXGcV0XdbOxafY-Q0DTWCUyVXLm2X6TmnUGw-DtxQdSeq85ZyjyU/pub?gid=983528119&single=true&output=csv';


    fetch(saleSheetURL)
        .then(response => response.text())
        .then(data => {
            console.log('CSV Data:', data);

            const rows = data.split('\n').slice(1);
            console.log('Parsed Rows:', rows);

            const todayStr = getLocalTodayStr();
            const yesterdayStr = getLocalYesterdayStr();

            console.log(`todayStr: ${todayStr} ‚Üí yesterdayStr: ${yesterdayStr}`);

            let totalToday = 0;
            let totalYesterday = 0;
            let total30Days = 0;

            rows.forEach(row => {
                console.log('Processing row:', row);

                const cols = row.split(',');
                const timestamp = cols[0]?.trim();
                const total = parseFloat(cols[1]?.replace(/[^\d.-]+/g, '') || '0');

                if (!timestamp) return;

                const parsedDateStr = parseDate(timestamp);
                console.log(`parsedDateStr: ${parsedDateStr} ‚Üí todayStr: ${todayStr} ‚Üí yesterdayStr: ${yesterdayStr}`);

                if (parsedDateStr === todayStr) {
                    totalToday += total;
                }

                if (parsedDateStr === yesterdayStr) {
                    totalYesterday += total;
                }

                const rowDate = new Date(parsedDateStr);
                const daysDiff = (new Date() - rowDate) / (1000 * 60 * 60 * 24);

                if (daysDiff <= 30 && daysDiff >= 0) {
                    total30Days += total;
                }
            });


            const summaryBoxes = document.querySelectorAll('.monitorTotalPrice-day > div > div:nth-child(2)');
            summaryBoxes[0].innerText = `${totalToday.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
            summaryBoxes[1].innerText = `${totalYesterday.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
            // summaryBoxes[2].innerText = `${total30Days.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
        })
        .catch(error => {
            console.error('Error fetching sales summary:', error);
        });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° URL ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    const monthlySheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQbRzocopmLvEUtBdAHbk4fiIcaxXGcV0XdbOxafY-Q0DTWCUyVXLm2X6TmnUGw-DtxQdSeq85ZyjyU/pub?gid=762124129&single=true&output=csv';


    fetch(monthlySheetURL)
        .then(response => response.text())
        .then(data => {
            console.log('Monthly CSV:', data);

            const rows = data.split('\n').slice(1);
            const currentMonth = new Date().getMonth() + 1; // JS ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 0-11 ‚Üí +1
            const currentYear = new Date().getFullYear();
            const currentMonthStr = `${currentMonth.toString().padStart(2, '0')}/${currentYear}`;

            let totalMonth = 0;

            rows.forEach(row => {
                const cols = row.split(',');
                const timestamp = cols[0]?.trim();
                const total = parseFloat(cols[1]?.trim() || '0');

                if (timestamp === currentMonthStr) {
                    totalMonth += total;
                }
            });

            console.log(`‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ (${currentMonthStr}): ${totalMonth} ‡∏ö‡∏≤‡∏ó`);

            // ‡πÄ‡∏≠‡∏≤‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ó‡∏ô‡∏ä‡πà‡∏≠‡∏á 30 ‡∏ß‡∏±‡∏ô
            const summaryBoxes = document.querySelectorAll('.monitorTotalPrice-day > div > div:nth-child(2)');
            summaryBoxes[2].innerText = `${totalMonth.toFixed(0)} ‡∏ö‡∏≤‡∏ó`;
        })
        .catch(error => {
            console.error('Error fetching monthly sales:', error);
        });

}
//----------------------------‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°---------------------------------------------------------
const Btnreceipt = document.getElementById("receipt");
const receiptPopup = document.getElementById("receiptPopup");
const closeReceiptPopup = document.getElementById("closeReceiptPopup");
const receiptHistoryContent = document.getElementById("receiptHistoryContent");

Btnreceipt.addEventListener("click", function () {
    if (receiptPopup.style.display === "none") {
        // Show popup
        receiptPopup.style.display = "block";

        // Load receipt history
        let receiptHistory = JSON.parse(localStorage.getItem("receiptHistory")) || [];

        if (receiptHistory.length === 0) {
            receiptHistoryContent.innerHTML = "<p style='text-align:center;'>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á</p>";
            return;
        }

        // Clear content
        receiptHistoryContent.innerHTML = "";

        // Show last 100 receipts ‚Üí slice().reverse()
        receiptHistory.slice(-100).reverse().forEach((receipt, index) => {
            const receiptDiv = document.createElement("div");
            receiptDiv.style.border = "1px solid #ccc";
            receiptDiv.style.margin = "10px 0";
            receiptDiv.style.padding = "10px";
            receiptDiv.style.borderRadius = "10px";
            receiptDiv.style.background = "#f9f9f9";

            let itemHTML = `
                <div style="font-weight:bold; color:green;">üßæ ‡πÉ‡∏ö‡∏ó‡∏µ‡πà ${index + 1}</div>
                <div><b>‡πÄ‡∏ß‡∏•‡∏≤:</b> ${receipt.time}</div>
                <div><b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</b> ${receipt.date}</div>
                <div><b>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</b></div>
            `;

            if (Array.isArray(receipt.items)) {
                receipt.items.forEach(item => {
                    itemHTML += `
                        <div style="margin-left:20px;">
                            - ${item.name} (${item.price.toFixed(0)} ‡∏ö‡∏≤‡∏ó) x${item.qty} ‚Üí ${item.total.toFixed(2)} ‡∏ö‡∏≤‡∏ó
                        </div>
                    `;
                });
            }

            itemHTML += `
                <div><b>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô:</b> ${receipt.total} ‡∏ö‡∏≤‡∏ó</div>
                <div><b>‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô:</b> ${receipt.cashReceived} ‡∏ö‡∏≤‡∏ó</div>
                <div><b>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</b> ${receipt.change}</div>
            `;

            receiptDiv.innerHTML = itemHTML;
            receiptHistoryContent.appendChild(receiptDiv);
        });
    } else {
        // Hide popup
        receiptPopup.style.display = "none";
    }
});

// ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î popup
closeReceiptPopup.addEventListener("click", function () {
    receiptPopup.style.display = "none";
});
